import { <%= entity.className %>Repository } from '../repository/<%= entity.fileName %>.repository';
import { <%= entity.className %>Entity } from '../entity/<%= entity.fileName %>.entity';
import { UseCase } from '@nx-clean/core';
import { Observable } from 'rxjs';

/**
 * Add your own transfer object definitions
 */
export interface Update<%= entity.className %>UseCaseDTO extends <%= entity.className %>Entity {
  id: string;
  name: string;
}

export class Update<%= entity.className %>UseCase implements UseCase<Update<%= entity.className %>UseCaseDTO, <%= entity.className %>Entity> {
  constructor(private <%= entity.propertyName %>Repository: <%= entity.className %>Repository) { }

  execute(request: Update<%= entity.className %>UseCaseDTO): Observable<<%= entity.className %>Entity> {
    return this.<%= entity.propertyName %>Repository.update<%= entity.className %>(request.id, request);
  }
}
